branding:
  icon: copy
  color: white
name: In Sync Action
description: Keep files in-sync between repositories
inputs:
#  git-author-email:
#    description: 'Email of the committer.'
#  git-author-name:
#    description: 'Name of the committer.'
  owner:
    description: 'Repository owner where changes will be pushed to (defaults to same owner)'
    default: ${{ github.repository_owner }}
  repository:
    description: 'Repository where changes will be pushed to'
    required: true
  token:
    description: 'Access token to read/write to the destination repo'
    required: true
  dst-branch:
    description: 'Branch to push to, repo default branch if not specified'
  files:
    description: 'Files to keep in sync, may be new line delimited'
    required: true
  pr-branch:
    description: 'Branch to make the changes in, insync if not specified'
  dry-run:
    description: "Set true to run the job without pushing."
    default: false
#  result-branch-name:
#    descripion: 'The name of the branch that will be created on the action done.'
#    default: sync/${{ github.repository }}
runs:
  using: "composite"
  steps:
    - run: ${{ github.action_path }}/src/main/sh/run.sh ${{ inputs.owner }} ${{ inputs.repository }} "${{ inputs.files }}"
      env:
        SRC_TOKEN: ${{ github.token }}
        DST_TOKEN: ${{ inputs.token }}
        GITHUB_TOKEN: ${{ inputs.token }} # required to create the PR by hub command line
        DST_BRANCH: ${{ inputs.dst-branch }}
        PR_BRANCH: ${{ inputs.pr-branch }}
        DRY_RUN: ${{ inputs.dry-run }}
      shell: bash
